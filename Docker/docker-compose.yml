version: "3.7"

services:

  database:
    container_name: postgres
    image: postgres:12.2-alpine # use official postgres version 12.2
    restart: unless-stopped
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
    env_file: 
      - database.env
    ports: 
      - target: 5432 # the port inside the container
        published: 35432 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on: 
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: "acm@ucmerced.edu"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2020!"
    ports: 
      - target: 80 # the port inside the container
        published: 8080 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together

  chapter-website:
    container_name: Chapter-Website
    image: chapter-website:v0.1
    restart: unless-stopped
    build:
      context: ../Chapter-Website
      dockerfile: Dockerfile
    depends_on:
      - half-dome
      - tuolumne
    ports: 
      - target: 4200 # the port inside the container
        published: 4200 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together

  half-dome:
    container_name: Half-Dome
    image: half-dome:v1.1
    restart: unless-stopped
    build:
      context: ../Half-Dome
      dockerfile: Dockerfile
    env_file: 
      - ../Half-Dome/.env
    depends_on:
      - database
    environment: 
      POSTGRES_HOST: host.docker.internal
      POSTGRES_PORT: 35432
      POSTGRES_DB: acm
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
    ports: 
      - target: 4201 # the port inside the container
        published: 4201 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together
  
  tuolumne:
    container_name: Tuolumne
    image: tuolumne:v1.0
    restart: unless-stopped
    build:
      context: ../Tuolumne
      dockerfile: Dockerfile
    env_file: 
      - ../Tuolumne/.env
    depends_on:
      - database
    environment: 
      DB_HOST: host.docker.internal
      DB_PORT: 35432
      DB_DATABASE: acm
      DB_USERNAME: docker
      DB_PASSWORD: docker
    ports: 
      - target: 4202 # the port inside the container
        published: 4202 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together

  tenaya:
    container_name: Tenaya
    image: tenaya:v1.0
    restart: unless-stopped
    build:
      context: ../Tenaya
      dockerfile: Dockerfile
    env_file: 
      - ../Tenaya/.env
    depends_on:
      - database
    environment: 
      DB_HOST: host.docker.internal
      DB_PORT: 35432
      DB_DATABASE: acm
      DB_USER: docker
      DB_PASSWORD: docker
      PORT: 4203
    ports: 
      - target: 4203 # the port inside the container
        published: 4203 # the publicly exposed port
        protocol: tcp # the port protocol (tcp or udp)
        mode: bridge # bridge networks are used to connect multiple containers together

volumes:
  database-data: # named volumes can be managed easier using docker-compose